#!/bin/sh

set -e

if [ ! -x "$(command -v pipenv)" ]; then
    echo 'pipenv python pip package does not installed, Install it by running:'
    echo 'pip install pipenv --user'
    echo 'then add this line to $HOME/.bashrc:'
    echo 'export PATH="${HOME}/.local/bin:$PATH"'
    echo 'then issue this command:'
    echo 'source $HOME/.bashrc'
    exit 0
fi

if [ ! -x "$(command -v direnv)" ]; then
    echo 'direnv apt package does not installed, Install it by running:'
    echo 'sudo apt install direnv'
    echo 'then add this line to $HOME/.bashrc:'
    echo 'eval "$(direnv hook bash)"'
    echo 'then issue this command:'
    echo 'source $HOME/.bashrc'
    exit 0
fi

dir=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)
cd $dir

/bin/rm -fr sfoil
/usr/bin/git clone git@sfithub.com:sunflowerit/sfoil.git sfoil

/bin/mkdir -p auto/addons/
/bin/mkdir -p common/build.d/
/bin/mkdir -p common/conf.d/
/bin/mkdir -p common/entrypoint.d/
/bin/mkdir -p custom/src/private/

if [ ! -f .env ]; then
    echo ".env file not found!"
    echo "Create it by running:"
    echo "Copy it from sfoil/templates/"
    echo "Then use your favorite editor to edit things like: Postgres database password, etc."
    exit 0
fi

if [ ! -f .envrc ]; then
    echo ".envrc file not found!"
    echo "Create it by running:"
    echo "Copy it from sfoil/templates/"
    echo "Then use your favorite editor to edit things like: Postgres database password, etc."
    exit 0
fi

if [ ! -f common/conf.d/odoo.cfg ]; then
    echo "common/conf.d/odoo.cfg file not found!"
    echo "Copy it from sfoil/templates/"
    exit 0
fi

if [ ! -f Pipfile ]; then
    echo "Pipfile file not found!"
    echo "Copy it from sfoil/templates/"
    exit 0
fi

if [ ! -d .venv ]; then
    PIPENV_VENV_IN_PROJECT="enabled" pipenv install
fi

# in .gitignore so not overridable
cd .venv/lib/*/site-packages
ln -sf ../../../../sfoil/lib/doodbalib doodbalib
cd ../../../..

cd .venv/bin
for f in ../../sfoil/bin/*; do ln -sf $f $(basename $f); done
cd ../..

# not in .gitignore so overridable
cd common
[ ! -e build ] && ln -sf ../sfoil/bin/direxec build
[ ! -e entrypoint ] && ln -sf ../sfoil/bin/direxec entrypoint
cd ..

cd common/build.d
for f in ../../sfoil/build.d/*; do [ ! -e $(basename $f) ] && ln -sf $f $(basename $f); done
cd ../..

cd common/entrypoint.d
for f in ../../sfoil/entrypoint.d/*; do [ ! -e $(basename $f) ] && ln -sf $f $(basename $f); done
cd ../..

[ ! -e build ] && ln -sf sfoil/build 
[ ! -e initial-database ] && ln -sf sfoil/initial-database 
[ ! -e install ] && ln -sf sfoil/install 
[ ! -e run ] && ln -sf sfoil/run 

# set permissions
chmod 750 .
chmod 750 auto
chmod 750 auto/addons
chmod 750 sfoil/bin
chmod 750 sfoil/build
chmod 750 sfoil/run
chmod 750 sfoil/install
chmod 750 sfoil/initial-database
chmod 740 sfoil/bin/*
chmod 750 common
chmod 750 common/build.d
chmod 740 common/build.d/*
chmod 750 common/conf.d
chmod -f 640 common/conf.d/odoo.cfg
chmod 750 common/entrypoint.d
chmod 740 common/entrypoint.d/*
chmod 750 custom
chmod 750 custom/src
chmod 750 custom/src/private/
chmod -f 640 custom/src/addons.yaml
chmod -f 640 custom/src/repos.yaml
chmod 750 sfoil/lib
chmod 750 sfoil/lib/doodbalib
chmod 740 sfoil/lib/doodbalib/*
chmod 640 sfoil/templates/*
chmod -f 600 .env
chmod -f 600 .envrc
chmod 740 bootstrap
chmod 740 build
chmod 740 initial-database
chmod 740 install
chmod -f 600 Pipfile
chmod -f 600 Pipfile.lock
chmod 740 run

