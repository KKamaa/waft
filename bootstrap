#!/bin/bash

set -e

if [ ! -f $HOME/.local/bin/pipenv ]; then
    echo 'pipenv python pip package does not installed, Install it by running:'
    echo 'pip install pipenv --user'
    echo 'then add this line to $HOME/.bashrc:'
    echo 'export PATH="${HOME}/.local/bin:$PATH"'
    echo 'then issue this command:'
    echo 'source $HOME/.bashrc'
    exit 1
fi

if [ ! -f /usr/bin/direnv ]; then
    echo 'direnv apt package does not installed, Install it by running:'
    echo 'sudo apt install direnv'
    echo "then add this line to $HOME/.bashrc:"
    echo 'eval "$(direnv hook bash)"'
    echo 'then issue this command:'
    echo 'source $HOME/.bashrc'
    exit 1
fi

WORK_DIRECTORY=$(SCRIPT_PATH= cd -- "$(/usr/bin/dirname "$0")" && /bin/pwd)
cd $WORK_DIRECTORY

/bin/rm -fr sfoil
/usr/bin/git clone git@sfithub.com:sunflowerit/sfoil.git $WORK_DIRECTORY/sfoil

/bin/mkdir -p $WORK_DIRECTORY/auto/addons/
/bin/mkdir -p $WORK_DIRECTORY/common/build.d/
/bin/mkdir -p $WORK_DIRECTORY/common/conf.d/
/bin/mkdir -p $WORK_DIRECTORY/common/entrypoint.d/
/bin/mkdir -p $WORK_DIRECTORY/custom/src/private/

if [ ! -f $WORK_DIRECTORY/.env ]; then
    echo "$WORK_DIRECTORY/.env file not found!"
    echo "Create it by running:"
    echo "Copy it from $WORK_DIRECTORY/sfoil/templates/"
    echo "Then use your favorite editor to edit things like: Postgres database password, etc."
    exit 1
fi

if [ ! -f $WORK_DIRECTORY/.envrc ]; then
    echo "$WORK_DIRECTORY/.envrc file not found!"
    echo "Create it by running:"
    echo "Copy it from $WORK_DIRECTORY/sfoil/templates/"
    echo "Then use your favorite editor to edit things like: Postgres database password, etc."
    exit 1
fi

if [ ! -f $WORK_DIRECTORY/common/conf.d/odoo.cfg ]; then
    echo "$WORK_DIRECTORY/common/conf.d/odoo.cfg file not found!"
    echo "Copy it from $WORK_DIRECTORY/sfoil/templates/"
    exit 1
fi

if [ ! -f $WORK_DIRECTORY/Pipfile ]; then
    echo "$WORK_DIRECTORY/Pipfile file not found!"
    echo "Copy it from $WORK_DIRECTORY/sfoil/templates/"
    exit 1
fi

if [ ! -d $WORK_DIRECTORY/.venv ]; then
    PIPENV_VENV_IN_PROJECT="enabled" $HOME/.local/bin/pipenv install
fi

# in .gitignore so not overridable
cd $WORK_DIRECTORY/.venv/lib/*/site-packages && \
/bin/ln -sf ../../../../sfoil/lib/doodbalib doodbalib

cd $WORK_DIRECTORY/.venv/bin && \
for f in ../../sfoil/bin/*; do /bin/ln -sf $f $(/usr/bin/basename $f); done

# not in .gitignore so overridable
cd $WORK_DIRECTORY/common && \
[ ! -e build ] && /bin/ln -sf ../sfoil/bin/direxec build && \
[ ! -e entrypoint ] && /bin/ln -sf ../sfoil/bin/direxec entrypoint

cd $WORK_DIRECTORY/common/build.d && \
for f in ../../sfoil/build.d/*; do [ ! -e $(/usr/bin/basename $f) ] && /bin/ln -sf $f $(/usr/bin/basename $f); done

cd $WORK_DIRECTORY/common/entrypoint.d && \
for f in ../../sfoil/entrypoint.d/*; do [ ! -e $(/usr/bin/basename $f) ] && /bin/ln -sf $f $(/usr/bin/basename $f); done

cd $WORK_DIRECTORY && \
[ ! -e build ] && /bin/ln -sf sfoil/build && \
[ ! -e initial-database ] && /bin/ln -sf sfoil/initial-database && \
[ ! -e install ] && /bin/ln -sf sfoil/install && \
[ ! -e run ] && /bin/ln -sf sfoil/run 

# set permissions
/bin/chmod 750 $WORK_DIRECTORY
/bin/chmod 750 $WORK_DIRECTORY/auto
/bin/chmod 750 $WORK_DIRECTORY/auto/addons
/bin/chmod 750 $WORK_DIRECTORY/sfoil/bin
/bin/chmod 750 $WORK_DIRECTORY/sfoil/build
/bin/chmod 750 $WORK_DIRECTORY/sfoil/run
/bin/chmod 750 $WORK_DIRECTORY/sfoil/install
/bin/chmod 750 $WORK_DIRECTORY/sfoil/initial-database
/bin/chmod 740 $WORK_DIRECTORY/sfoil/bin/*
/bin/chmod 750 $WORK_DIRECTORY/common
/bin/chmod 750 $WORK_DIRECTORY/common/build.d
/bin/chmod 740 $WORK_DIRECTORY/common/build.d/*
/bin/chmod 750 $WORK_DIRECTORY/common/conf.d
/bin/chmod -f 640 $WORK_DIRECTORY/common/conf.d/odoo.cfg
/bin/chmod 750 $WORK_DIRECTORY/common/entrypoint.d
/bin/chmod 740 $WORK_DIRECTORY/common/entrypoint.d/*
/bin/chmod 750 $WORK_DIRECTORY/custom
/bin/chmod 750 $WORK_DIRECTORY/custom/src
/bin/chmod 750 $WORK_DIRECTORY/custom/src/private/
/bin/chmod -f 640 $WORK_DIRECTORY/custom/src/addons.yaml
/bin/chmod -f 640 $WORK_DIRECTORY/custom/src/repos.yaml
/bin/chmod 750 $WORK_DIRECTORY/sfoil/lib
/bin/chmod 750 $WORK_DIRECTORY/sfoil/lib/doodbalib
/bin/chmod 740 $WORK_DIRECTORY/sfoil/lib/doodbalib/*
/bin/chmod 640 $WORK_DIRECTORY/sfoil/templates/*
/bin/chmod -f 600 $WORK_DIRECTORY/.env
/bin/chmod -f 600 $WORK_DIRECTORY/.envrc
/bin/chmod 740 $WORK_DIRECTORY/bootstrap
/bin/chmod 740 $WORK_DIRECTORY/build
/bin/chmod 740 $WORK_DIRECTORY/initial-database
/bin/chmod 740 $WORK_DIRECTORY/install
/bin/chmod -f 600 $WORK_DIRECTORY/Pipfile
/bin/chmod -f 600 $WORK_DIRECTORY/Pipfile.lock
/bin/chmod 740 $WORK_DIRECTORY/run

